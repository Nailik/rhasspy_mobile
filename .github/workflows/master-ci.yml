name: Release CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 18.0.1+10
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '18.0.1+10'
          cache: gradle
        # necessary for linux/macos but doesn't work on windows
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # android lint release
      - name: Android Lint Check
        run: ./gradlew lintRelease
      # android lint release upload
      - uses: actions/upload-artifact@v3
        with:
          name: AndroidLintRelease
          path: androidApp/build/reports/lint-results-release.html
      #run all unit tests (debug and release)
      - name: Unit Tests
        run: ./gradlew test
      # android UI Test
      - name: Android UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86
          profile: Nexus 6
          script: ./gradlew androidApp:connectedCheck
      - name: Test Report Tests
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Test Report          # Name of the check run which will be created
          path: androidApp/build/outputs/androidTest-results/connected/TEST-*.xml,MultiPlatformLibrary/build/test-results/test*UnitTest/TEST-*.xml    # Path to test results
          reporter: java-junit        # Format of test results
      # ui test result upload
      - uses: actions/upload-artifact@v3
        with:
          name: AndoridUITest
          path: androidApp/build/reports/androidTests/connected
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Project Build
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew androidApp:build sonarqube
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: androidApp/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env: # override default build-tools version (29.0.3) -- optional
          BUILD_TOOLS_VERSION: "30.0.2"
          # Example use of `signedReleaseFile` output -- not needed
      - uses: actions/upload-artifact@v3
        with:
          name: Signed release apks
          path: |
            ${{ steps.sign_app.signedReleaseFile0 }}
            ${{ steps.sign_app.signedReleaseFile1 }}
            ${{ steps.sign_app.signedReleaseFile2 }}
            ${{ steps.sign_app.signedReleaseFile3 }}
      #create a release
      - name: Example Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Release X (TEST ONLY!)"
          files: |
            ${{ steps.sign_app.signedReleaseFile0 }}
            ${{ steps.sign_app.signedReleaseFile1 }}
            ${{ steps.sign_app.signedReleaseFile2 }}
            ${{ steps.sign_app.signedReleaseFile3 }}
            ${{ steps.sign_app.signedReleaseFile4 }}